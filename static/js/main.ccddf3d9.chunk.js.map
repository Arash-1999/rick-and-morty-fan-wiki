{"version":3,"sources":["store/charsSlice.js","store/store.js","component/list/list.js","component/heading.js","component/image.js","component/list/listContainer.js","component/btn.js","component/textfield.js","component/search/search.js","chars.js","App.js","index.js"],"names":["charSlice","createSlice","name","initialState","loading","data","page","reducers","addChars","state","action","payload","next","setChars","actions","getChars","dispatch","getState","a","url","chars","fetch","json","results","info","selectChars","store","configureStore","reducer","charReducer","List","styled","ul","Item","li","num","Math","floor","random","Heading","children","component","variant","size","parseInt","match","Result","Image","img","ListItem","src","image","alt","ListContainer","map","item","idx","Button","button","Textfield","input","Label","label","Search","useState","query","setQuery","dispacth","useDispatch","onSubmit","e","preventDefault","getCharsByQuery","htmlFor","onChange","target","value","type","id","role","Chars","props","useSelector","useEffect","onClick","App","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccddf3d9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  data: [],\n  page: \"https://rickandmortyapi.com/api/character\"\n};\n\n// character slice\nconst charSlice = createSlice({\n  name: \"chars\",\n  initialState,\n  reducers: {\n    addChars: (state, action) => {\n      state.page = action.payload.next;\n      state.data = [...state.data, ...action.payload.data];\n    },\n    setChars: (state, action) => {\n      state.page = action.payload.next;\n      state.data = action.payload.data;\n    }\n  }\n});\n\n// character slice reducers\n// this will export as default\nexport default charSlice.reducer;\n\n// character slice actions\nexport const { addChars, setChars } = charSlice.actions;\n\n// load characters\nexport const getChars = () => async (dispatch, getState) => {\n  // get new page url\n  let url = getState().chars.page;\n  // check validation of new page url\n  if(url === null) return;\n  // fetch data from api\n  let data = await fetch(url);\n  data = await data.json();\n\n  // add new data to store\n  dispatch(addChars({data: data.results, next: data.info.next}));\n};\n\n// thunk for getting characters by given query\nexport const getCharsByQuery = (query) => async (dispatch) => {\n  // default endpoint\n  let url = \"https://rickandmortyapi.com/api/character/?name=\";\n  // fetch data from api\n  let data = await fetch(url + query);\n  data = await data.json();\n\n  // add new data to store\n  dispatch(setChars({data: data.results, next: data.info.next}));\n};\n\n// selecting characters\nexport const selectChars = (state) => state.chars;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport charReducer from \"./charsSlice.js\";\n\nconst store = configureStore({\n  reducer: {\n    chars: charReducer\n  }\n});\n\nexport default store;\n","import styled from \"@emotion/styled\";\n\nconst List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nconst Item = styled.li`\n  padding: 1em;\n  margin: .5em;\n  width: 22vw;\n  border-radius: .5em;\n  border: 3px solid var(--main-1);\n  background: ${() => {\n    let num = Math.floor(Math.random() * 4) + 2;\n    return `var(--main-${num})`\n  }};\n\n  @media (max-width: 640px) {\n    width: 80vw;\n  }\n  @media (max-width: 960px) {\n    width: 45vw;\n  }\n`;\n\nexport { List, Item };\n","import styled from \"@emotion/styled\";\n\nconst Heading = ({\n  children,\n  component,\n  variant\n}) => {\n  // calculating size of heading\n  let size = parseInt(component.match(/\\d+/g)[0]);\n  size = typeof(size) === \"number\" ? 6 - size : 1;\n\n  // creating styled heading\n  let Result = styled[component]`\n    color: #323232;\n    padding: .5em 1em;\n    margin: .1em 0;\n    border-radius: .5em;\n    font-size: ${.5 + (size / 6) * 2}em;\n    ${variant=== \"glass\" ? `\n      background: rgba(255, 255, 255, .4);\n\n      &:hover {\n        background: rgba(255, 255, 255, .6);\n      }\n    ` : null}\n  `;\n\n  return (\n    <Result>{children}</Result>\n  );\n};\n\nexport default Heading;\n","import styled from \"@emotion/styled\";\n\nconst Image = styled.img`\n  display: inline-block;\n  width: 100%;\n  border: 1px solid var(--main-1);\n`;\n\nexport default Image;\n","import React from \"react\";\n\nimport { List, Item } from \"./list.js\";\nimport Heading from \"./../heading.js\";\nimport Image from \"./../image.js\";\n\nconst ListItem = ({ data }) => (\n  <Item>\n    <Image src={data.image} alt={data.name} />\n    <Heading variant=\"glass\" component=\"h4\" children={data.name} />\n  </Item>\n);\n\nconst ListContainer = ({ data }) => (\n  <List>\n    {data.map((item, idx) => (\n      <ListItem key={idx} data={item}/>\n    ))}\n  </List>\n);\n\nexport default ListContainer;\n","import styled from \"@emotion/styled\";\n\nconst Button = styled.button`\n  --bg: #ddd;\n  --fg: #323232;\n  --shadow: var(--main-1);\n  padding: .5em;\n  margin: 1.5em;\n  font-size: 1rem;\n  font-weight: 700;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid var(--fg);\n  background: var(--bg);\n  color: var(--fg);\n  transition: all .1s, box-shadow .2s;\n  box-shadow: .3em .3em 0 var(--shadow),\n    -.3em .3em 0 var(--shadow),\n    .3em -.3em 0 var(--shadow),\n    -.3em -.3em 0 var(--shadow);\n\n  &:hover {\n    box-shadow: 0 0 3px 3px rgba(255, 255, 255, .3),\n      1em .3em 0 var(--shadow),\n      -1em -.3em 0 var(--shadow);\n  }\n  &:active {\n    --bg: #fff;\n    --fg: #000;\n  }\n`;\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nconst Textfield = styled.input`\n  padding: .5em;\n  max-width: 100%;\n  border: 3px solid var(--main-1);\n  outling: none;\n  font-size: 1em;\n  font-weight: 500;\n  background: rgba(255, 255, 255, .6);\n  \n  &:hover {\n    box-shadow: 5px 5px 5px rgba(255, 255, 255, .1),\n      5px -5px 5px rgba(255, 255, 255, .1),\n      -5px 5px 5px rgba(255, 255, 255, .1),\n      -5px -5px 5px rgba(255, 255, 255, .1);\n    background: rgba(255, 255, 255, .65);\n  }\n  &:focus {\n    background: rgba(255, 255, 255, .7);\n  }\n`;\n\nexport default Textfield;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"@emotion/styled\";\n\nimport { getCharsByQuery } from \"./../../store/charsSlice.js\";\n\nimport Button from \"./../btn.js\";\nimport TextField from \"./../textfield.js\";\n\nconst Label = styled.label`\n  font-weight: 700;\n  font-size: 1.2rem;\n`;\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const dispacth = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispacth(getCharsByQuery(query));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label htmlFor=\"query\">Name: </Label>\n      <TextField onChange={(e) => {setQuery(e.target.value)}} value={query} type=\"text\" id=\"query\" />\n      <Button role=\"button\" type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectChars} from \"./store/charsSlice.js\";\nimport { getChars } from \"./store/charsSlice.js\";\n\nimport ListContainer from \"./component/list/listContainer.js\";\nimport Button from \"./component/btn.js\";\nimport Search from \"./component/search/search.js\";\n\nconst Chars = (props) => {\n  const dispatch = useDispatch();\n  const data = useSelector(selectChars);\n\n  useEffect(() => {\n    dispatch(getChars());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <Search/>\n      <ListContainer data={data.data} />\n      <Button onClick={() => {dispatch(getChars())}}>Load More</Button>\n    </main>\n  );\n};\n\nexport default Chars;\n","import React from \"react\";\nimport Chars from \"./chars\";\n\nconst App = () => {\n  return (\n    <>\n      <Chars />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store.js\";\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}