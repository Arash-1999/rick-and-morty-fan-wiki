{"version":3,"sources":["store/charsSlice.js","store/singleCharSlice.js","store/store.js","component/list/list.js","component/heading.js","component/image.js","component/list/listContainer.js","component/btn.js","component/textfield.js","component/search/search.js","component/loading.js","chars.js","component/character/character.js","App.js","index.js"],"names":["charSlice","createSlice","name","initialState","loading","data","page","reducers","addChars","state","action","payload","next","setChars","setLoading","actions","getChars","dispatch","getState","a","url","chars","fetch","json","results","info","selectChars","singleCharSlice","char","setChar","selectSingleChar","singleChar","store","configureStore","reducer","charReducer","singleCharReducer","List","styled","ul","Item","li","num","Math","floor","random","Heading","children","component","variant","size","parseInt","match","Result","Image","img","props","margin","ListItem","to","id","src","image","alt","ListContainer","map","item","idx","Button","button","Textfield","input","Label","label","Search","useState","query","setQuery","dispacth","useDispatch","onSubmit","e","preventDefault","getCharsByQuery","htmlFor","onChange","target","value","type","role","bounce","keyframes","rotate","Load","div","LoadDot","i","Loading","Array","fill","Chars","useSelector","useEffect","length","disabled","onClick","ChracterCard","section","Dot","span","color","Character","history","params","status","species","gender","origin","push","App","path","exact","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c42bb3a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  data: [],\n  page: \"https://rickandmortyapi.com/api/character\"\n};\n\n// character slice\nconst charSlice = createSlice({\n  name: \"chars\",\n  initialState,\n  reducers: {\n    addChars: (state, action) => {\n      state.page = action.payload.next;\n      state.data = [...state.data, ...action.payload.data];\n    },\n    setChars: (state, action) => {\n      state.page = action.payload.next;\n      state.data = action.payload.data;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    }\n  }\n});\n\n// character slice reducers\n// this will export as default\nexport default charSlice.reducer;\n\n// character slice actions\nexport const { addChars, setChars, setLoading } = charSlice.actions;\n\n// load characters\nexport const getChars = () => async (dispatch, getState) => {\n  // get new page url\n  let url = getState().chars.page;\n  // check validation of new page url\n  if(url === null) return;\n\n  // loading status\n  dispatch(setLoading(true));\n\n  // fetch data from api\n  let data = await fetch(url);\n  data = await data.json();\n\n  // add new data to store\n  dispatch(addChars({data: data.results, next: data.info.next}));\n\n  // loading status\n  dispatch(setLoading(false));\n};\n\n// thunk for getting characters by given query\nexport const getCharsByQuery = (query) => async (dispatch) => {\n  // loading status\n  dispatch(setLoading(true));\n  // default endpoint\n  let url = \"https://rickandmortyapi.com/api/character/?name=\";\n  // fetch data from api\n  let data = await fetch(url + query);\n  data = await data.json();\n\n  // add new data to store\n  dispatch(setChars({data: data.results, next: data.info.next}));\n\n  // loading status\n  dispatch(setLoading(false));\n};\n\n// selecting characters\nexport const selectChars = (state) => state.chars;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  char: {},\n  loading: true\n};\n\nconst singleCharSlice = createSlice({\n  name: \"singleChar\",\n  initialState,\n  reducers: {\n    setChar: (state, action) => {\n      state.char = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    }\n  }\n});\n\n// reducers\nexport default singleCharSlice.reducer;\n\n// actions\nexport const { setChar, setLoading } = singleCharSlice.actions;\n\n// thunk for getting single character from api\nexport const getSingleChar = (id) => async (dispatch) => {\n  // set loading status\n  dispatch(setLoading(true));\n  // default endpoint\n  let url = \"https://rickandmortyapi.com/api/character/\";\n  let data = await fetch(url + id);\n  data = await data.json();\n\n  dispatch(setChar(data));\n  dispatch(setLoading(false));\n};\n\n// selectors\nexport const selectSingleChar = (state) => state.singleChar;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport charReducer from \"./charsSlice.js\";\nimport singleCharReducer from \"./singleCharSlice.js\";\n\nconst store = configureStore({\n  reducer: {\n    chars: charReducer,\n    singleChar: singleCharReducer\n  }\n});\n\nexport default store;\n","import styled from \"@emotion/styled\";\n\nconst List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nconst Item = styled.li`\n  padding: 1em;\n  margin: .5em;\n  width: 22vw;\n  border-radius: .5em;\n  border: 3px solid var(--main-1);\n  background: ${() => {\n    let num = Math.floor(Math.random() * 4) + 2;\n    return `var(--main-${num})`\n  }};\n\n  @media (max-width: 640px) {\n    width: 80vw;\n  }\n  @media (max-width: 960px) {\n    width: 45vw;\n  }\n\n  * {\n    text-decoration: none;\n  }\n`;\n\nexport { List, Item };\n","import styled from \"@emotion/styled\";\n\nconst Heading = ({\n  children,\n  component,\n  variant\n}) => {\n  // calculating size of heading\n  let size = parseInt(component.match(/\\d+/g)[0]);\n  size = typeof(size) === \"number\" ? 6 - size : 1;\n\n  // creating styled heading\n  let Result = styled[component]`\n    color: #323232;\n    padding: .5em 1em;\n    margin: .1em 0;\n    border-radius: .5em;\n    font-size: ${.5 + (size / 6) * 2}em;\n    ${variant=== \"glass\" ? `\n      background: rgba(255, 255, 255, .4);\n\n      &:hover {\n        background: rgba(255, 255, 255, .6);\n      }\n    ` : null}\n  `;\n\n  return (\n    <Result>{children}</Result>\n  );\n};\n\nexport default Heading;\n","import styled from \"@emotion/styled\";\n\nconst Image = styled.img`\n  display: inline-block;\n  width: 100%;\n  border: 1px solid var(--main-1);\n  margin: ${(props) => {\n    return props.margin ? props.margin : 0;\n  }};\n`;\n\nexport default Image;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { List, Item } from \"./list.js\";\nimport Heading from \"./../heading.js\";\nimport Image from \"./../image.js\";\n\nconst ListItem = ({ data }) => (\n  <Item>\n    <Link to={`/character/${data.id}`}>\n      <Image src={data.image} alt={data.name} />\n      <Heading variant=\"glass\" component=\"h4\" children={data.name} />\n    </Link>\n  </Item>\n);\n\nconst ListContainer = ({ data }) => (\n  <List>\n    {data.map((item, idx) => (\n      <ListItem key={idx} data={item}/>\n    ))}\n  </List>\n);\n\nexport default ListContainer;\n","import styled from \"@emotion/styled\";\n\nconst Button = styled.button`\n  --bg: #ddd;\n  --fg: #323232;\n  --shadow: var(--main-1);\n  padding: .5em;\n  margin: 1.5em;\n  font-size: 1rem;\n  font-weight: 700;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid var(--fg);\n  background: var(--bg);\n  color: var(--fg);\n  transition: all .1s, box-shadow .2s;\n  box-shadow: .3em .3em 0 var(--shadow),\n    -.3em .3em 0 var(--shadow),\n    .3em -.3em 0 var(--shadow),\n    -.3em -.3em 0 var(--shadow);\n\n  &:hover {\n    box-shadow: 0 0 3px 3px rgba(255, 255, 255, .3),\n      1em .3em 0 var(--shadow),\n      -1em -.3em 0 var(--shadow);\n  }\n  &:active {\n    --bg: #fff;\n    --fg: #000;\n  }\n`;\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nconst Textfield = styled.input`\n  padding: .5em;\n  max-width: 100%;\n  border: 3px solid var(--main-1);\n  outling: none;\n  font-size: 1em;\n  font-weight: 500;\n  background: rgba(255, 255, 255, .6);\n  \n  &:hover {\n    box-shadow: 5px 5px 5px rgba(255, 255, 255, .1),\n      5px -5px 5px rgba(255, 255, 255, .1),\n      -5px 5px 5px rgba(255, 255, 255, .1),\n      -5px -5px 5px rgba(255, 255, 255, .1);\n    background: rgba(255, 255, 255, .65);\n  }\n  &:focus {\n    background: rgba(255, 255, 255, .7);\n  }\n`;\n\nexport default Textfield;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"@emotion/styled\";\n\nimport { getCharsByQuery } from \"./../../store/charsSlice.js\";\n\nimport Button from \"./../btn.js\";\nimport TextField from \"./../textfield.js\";\n\nconst Label = styled.label`\n  font-weight: 700;\n  font-size: 1.2rem;\n`;\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const dispacth = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispacth(getCharsByQuery(query));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label htmlFor=\"query\">Name: </Label>\n      <TextField onChange={(e) => {setQuery(e.target.value)}} value={query} type=\"text\" id=\"query\" />\n      <Button role=\"button\" type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { keyframes } from \"@emotion/react\";\n\n\nconst bounce = keyframes`\n  to {\n    transform: rotate(calc(var(--i) * 18deg)) translateY(-3.75em) scale(.9);\n  }\n`\nconst rotate = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Load = styled.div`\n  /*** change this values to customaize ***/\n  --size: .5rem;\n  --dot-time: .6s;\n  --dot-color: var(--main-1);\n  --rotate-duration: 4s;\n  /*** *** ***/\n\n  font-size: var(--size);\n  width: 10em;\n  height: 10em;\n  position: relative;\n\n  animation: ${rotate} var(--rotate-duration) linear infinite forwards;\n`;\n\nconst LoadDot = styled.div`\n  ${props => `--i: ${props.i};`}\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  left: calc(50% - .5em);\n  top: calc(50% - .5em);\n  border-radius: 50%;\n  background: var(--dot-color);\n  transform: rotate(calc(var(--i) * 18deg)) translateY(-5em);\n\n  animation: ${bounce} var(--dot-time) ease-in-out infinite alternate;\n  ${props => props.i % 2 === 0 ? \"animation-delay: var(--dot-time)\" : null}\n`;\n\nconst Loading = () => (\n  <Load>\n    {Array(20).fill(0).map((item, i) => (\n      <LoadDot i={i} key={i}/>\n    ))}\n  </Load>\n);\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectChars} from \"./store/charsSlice.js\";\nimport { getChars } from \"./store/charsSlice.js\";\n\nimport ListContainer from \"./component/list/listContainer.js\";\nimport Button from \"./component/btn.js\";\nimport Search from \"./component/search/search.js\";\nimport Loading from \"./component/loading.js\";\n\nconst Chars = (props) => {\n  const dispatch = useDispatch();\n  const { data, loading, page }= useSelector(selectChars);\n\n  useEffect(() => {\n    // only get character list when there is no character in store\n    if(data.length === 0) {\n      dispatch(getChars());\n    }\n  // eslint-disable-next-line\n  }, []);\n\n  return (\n    <main>\n      <Search/>\n      <ListContainer data={data} />\n      {loading ? (<Loading />) : null}\n      <Button\n        disabled={loading || page === null}\n        onClick={() => {dispatch(getChars())}}>Load More</Button>\n    </main>\n  );\n};\n\nexport default Chars;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"@emotion/styled\";\n\nimport {\n  getSingleChar,\n  selectSingleChar\n} from \"./../../store/singleCharSlice.js\";\n\nimport Loading from \"./../loading.js\";\nimport Button from \"./../btn.js\";\nimport Image from \"./../image.js\";\n\n/*** *** *** *** *** *** *** ***/\n// styles\nconst ChracterCard = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media(max-width: 740px) {\n    flex-direction: column;\n  }\n  padding: 1em;\n  border-radius: .5em;\n  border: 3px solid var(--main-1);\n  background: ${() => {\n    let num = Math.floor(Math.random() * 4) + 2;\n    return `var(--main-${num})`;\n  }};\n\n  > img {\n    flex: 1;\n  }\n`;\n\nconst List = styled.ul`\n  list-style: none;\n`;\n\nconst Dot = styled.span`\n  display: inline-block;\n  font-size: .75em;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  margin: 0 .5em;\n  border: 2px solid white;\n  background: ${(props) => props.color ? props.color : \"white\"};\n`;\n/*** *** *** *** *** *** *** ***/\n\n/*** *** *** *** *** *** *** ***/\n// character component\nconst Character = ({ match, history }) => {\n  const dispatch = useDispatch();\n  const { loading, char } = useSelector(selectSingleChar);\n\n  // eslint-disable-next-line\n  useEffect(() => dispatch(getSingleChar(match.params.id)), []);\n\n  // back to home event listener\n  const goHome = ()  => {\n    history.push(\"/\");\n  };\n\n  return (\n    <main>\n      {loading ? (<Loading />) : (\n        <ChracterCard>\n          <Image src={char.image} alt={char.name} margin=\"1em\" />\n          <List>\n            <li>\n              <strong>Name:</strong> {char.name ? char.name : \"Unkown\"}\n            </li>\n            <li>\n              <strong>Status:</strong> {char.status ? char.status : \"Unkown\"}\n              <Dot color={char.status === \"Alive\" ? \"lime\" : \"crimson\"} />\n            </li>\n            <li>\n              <strong>Species:</strong> {char.species ? char.species : \"Unkown\"}\n            </li>\n            <li>\n              <strong>Type:</strong> {char.type ? char.type : \"Unkown\"}\n            </li>\n            <li>\n              <strong>Gender:</strong> {char.gender ? char.gender : \"Unkown\"}\n            </li>\n            <li>\n              <strong>Origin:</strong> {char.origin.name ? char.origin.name : \"Unkown\"}\n            </li>\n          </List>\n        </ChracterCard>\n      )}\n      <Button onClick={goHome}>Back to home</Button>\n    </main>\n  );\n};\n/*** *** *** *** *** *** *** ***/\n\nexport default Character;\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport Chars from \"./chars\";\nimport Character from \"./component/character/character\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact={true} component={Chars} />\n      <Route\n        path=\"/character/:id\"\n        component={Character} />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store.js\";\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}